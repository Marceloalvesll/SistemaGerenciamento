@model SistemaGerenciamento.Models.ItemDoMenu

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "ItemDoMenus1", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ItemDoMenu</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Image) <!-- Armazena o caminho atual da imagem -->

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecoString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PrecoString, new { @class = "form-control", @id = "PrecoString", @type = "text" })
            @Html.ValidationMessageFor(model => model.PrecoString, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Disponivel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Disponivel)
                @Html.ValidationMessageFor(model => model.Disponivel, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoriaId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
        </div>
    </div>


    <!-- Campo de upload de imagem -->
    <div class="form-group">
        @Html.Label("Imagem Atual", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img id="currentImage" src="@Model.Image" width="100px" height="60px" alt="Imagem Atual" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageFile, "Atualizar Imagem", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ImageFile" id="ImageFile" accept="image/*" />
            @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Substitui vírgula por ponto no campo PrecoString
        document.getElementById("PrecoString").addEventListener("input", function () {
            this.value = this.value.replace(",", ".");
        });

        // Pré-visualização da nova imagem
        document.getElementById("ImageFile").addEventListener("change", function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("currentImage").src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
}
